<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
    <title type="text" xml:lang="en">DataScience Blog</title>
    <link type="application/atom+xml" rel="self" href="http://santhosh114.github.io//atom.xml"/>
  
  <link href="http://santhosh114.github.io//"/>
  <id>http://santhosh114.github.io//</id>
  <updated>2016-02-22T13:26:04Z</updated>
  <author>
    <name>Santhosh</name>
    <email>soundars@umail.iu.edu</email>
  </author>
  <rights type="text">Copyright © 2016 Santhosh. All rights reserved.</rights>
  
  <entry>
  <title type="text">Neo4j Based Graph Schema Alternative for Facebook&#39;s DB</title>
  <link rel="alternate" type="text/html" href="http://santhosh114.github.io//post2.html" />
  <id>http://santhosh114.github.io//post2</id>
  <published>2016-01-19T00:00:00Z</published>
  <updated>2016-01-19T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p><img src="../static/img/blog/fbschema/main.png" alt="Test Image" style="width:704px;height:503px;" /></p>

<blockquote>
  <p>This is an extract of my inclass presentations of Z604:Big Data Analytics for Web and Text course at <a href="https://www.indiana.edu">Indiana University, Bloomington</a>. Instructor: <a href="https://www.ils.indiana.edu/people/profile.html?profile_id=100">Xiaozhong Liu</a></p>
</blockquote>

<div class="divider"></div>

<h3 id="objective"><a href="">Objective:</a></h3>

<p>To host a very large and complex data such as the Facebook’s friends network graph data.</p>
<p><img src="../static/img/blog/fbschema/complex.png" alt="Test Image" style="width:704px;height:79px;" /></p>
<p>Provide efficient data search and access. </p>

<ul>
  <li>A traditional RDBMS model</li>
  <li>Drawbacks of Relational model</li>
  <li>A more efficient Graph Data Model</li>
  <li>Timeline Trees</li>
</ul>

<div class="divider"></div>

<h3 id="limitations-of-relational-data-model"><a href="">Limitations of Relational Data Model:</a></h3>

<p>A typical query in connected data model involves JOIN operations between tables.    
This leads to expensive search computation.</p>
<p><img src="../static/img/blog/fbschema/limit.png" alt="Test Image" style="width:704px;height:450px;" /></p>
<p><a href="http://neo4j.com/developer/graph-db-vs-rdbms/">Image Source</a>
Find more at <a href="http://neo4j.com/developer/graph-db-vs-rdbms/">Neo4j discussion on Graph DB vs RDBMS</a></p>

<div class="divider"></div>

<h3 id="graph-relationship-model"><a href="">Graph Relationship Model:</a></h3>

<h5 id="why-graph-database">Why Graph Database?</h5>
<ul>
  <li>Graph Schema: The best possible abstraction for modeling connectedness.</li>
  <li>
    <p>Data model that evolves in step with the iterative and incremental development.
        - Rewritable Schema: Can add nodes and relationships dynamically</p>
  </li>
  <li>Answers by traversing (querying) the graph rather than resorting to latent map-reduce computations.</li>
  <li>Memory use or Latency of a query with a join is obliterated</li>
  <li>Average Speed of Graph Database
        - 4 million nodes/ sec!</li>
  <li>Geared towards Pattern Mining – the search queries natively look for patterns.
Eg. It searches Common Friends based on common profile properties such as
                          - Location
                          - Education
                          - Work etc.</li>
</ul>

<div class="divider"></div>

<h3 id="graph-schema-entities"><a href="">Graph Schema Entities:</a></h3>

<h5 id="node">Node</h5>
<ul>
  <li>Node is an entity bag/object containing attributes 
             {eg. – name, age, location etc. }</li>
  <li>Relationship is a named &amp; directed entity that produce a schematic structure</li>
  <li>It can have properties like strength/weight, cardinality</li>
  <li>Weights in relationships are used for shortest path traversals</li>
</ul>

<div class="divider"></div>

<h3 id="labeled-property-graphneo4j">Labeled property graph<a href="">(neo4j)</a></h3>

<p><img src="../static/img/blog/fbschema/share copy.png" alt="Test Image" style="width:345px;height:201px;" /></p>
<p>Labels in property graph facilitate defining &amp; finding patterns using ASCII –Art &amp; deriving instances that contain a path expression</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css">   <span class="o">(</span><span class="nt">person</span><span class="o">)</span><span class="nt">-</span><span class="o">[</span><span class="nd">:LIKE</span><span class="o">]</span><span class="nt">-</span><span class="o">&gt;(</span><span class="nt">thing</span><span class="o">)</span> </code></pre></figure>

<p>Similar objects can contain different set of properties in a Labeled property graph!</p>

<div class="divider"></div>

<h3 id="timeline-trees"><a href="">Timeline Trees:</a></h3>

<p>To search posts/events over a specific period of time.</p>
<p><img src="../static/img/blog/fbschema/template.png" alt="Test Image" style="width:704px;height:560px;" /></p>

 ]]></content>
</entry>


  <entry>
  <title type="text">Interactive Visualization of US Airport Evolution</title>
  <link rel="alternate" type="text/html" href="http://santhosh114.github.io//post1.html" />
  <id>http://santhosh114.github.io//post1</id>
  <published>2015-11-10T00:00:00Z</published>
  <updated>2015-11-10T00:00:00Z</updated>
  <content type="html"><![CDATA[ <div id="us_states">
</div>
<script src="airport/jquery-1.10.2.js"></script>

<script src="airport/d3.v3.min.js"></script>

<script src="airport/topojson.v1.min.js"></script>

<script src="airport/airport_viz.js"></script>

<blockquote>
  <p>This is an academic project for I590: Data Visualization course at <a href="https://www.indiana.edu">Indiana University, Bloomington</a>, Instructor: <a href="http://yongyeol.com">Yong Yeol Ahn</a>. Visit the project <a href="http://www.santhoshfiddle.com/geoSample/index.html">page</a> for more info on this concept ideation and our team.</p>
</blockquote>

<div class="myNote"></div>

<div class="divider"></div>

<h3 id="overview"><a href="">Overview:</a></h3>

<p>This is a walkthrough of my project on creating interactive transitions using tween functions on objects tied to a map/geo-location in D3.js.</p>

<p>Everything here is rendered in SVG!</p>

<p>Check my blog titled <a href="">“Basemaps with d3.js”</a> for how the US map is generated with TopoJSON and many other ways of representing cartograms.</p>

<div class="divider"></div>

<div class="divider"></div>

<h5>United States - Basemap:</h5>

<div id="states">
<script type="text/javascript">
(function() {

var projection = d3.geo.albersUsa()
    .scale(1000)
    .translate([800/2, 500/2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("#states").append("svg")
    .attr("width", 750)
    .attr("height", 500);

d3.json("airport/us.json", function(error, us) {
  if (error) return console.error(error);
  console.log(us);

  svg.selectAll("path")
     .data(topojson.feature(us, us.objects.states).features)
      .enter()
      .append("path")
      .attr("d", path)
      .attr("fill", "LightGray")
      .attr("stroke", "White")
      .on("mouseover", function(d) {
          d3.select(this).style("fill", "CornflowerBlue");
          })                  
      .on("mouseout", function(d) {
           d3.select(this).style("fill", "LightGray");
          });

});


})();
</script>
</div>

<p>The .on(“mouseover”,…) part is what makes this map interactive!</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

<span class="kd">var</span> <span class="nx">projection</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">geo</span><span class="p">.</span><span class="nx">albersUsa</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">translate</span><span class="p">([</span><span class="mi">800</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="mi">500</span><span class="o">/</span><span class="mi">2</span><span class="p">]);</span>

<span class="kd">var</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">geo</span><span class="p">.</span><span class="nx">path</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">projection</span><span class="p">(</span><span class="nx">projection</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">"#states"</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s2">"svg"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"width"</span><span class="p">,</span> <span class="mi">750</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"height"</span><span class="p">,</span> <span class="mi">500</span><span class="p">);</span>

<span class="nx">d3</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="s2">"airport/us.json"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">us</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">us</span><span class="p">);</span>

  <span class="nx">svg</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">"path"</span><span class="p">)</span>
     <span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">topojson</span><span class="p">.</span><span class="nx">feature</span><span class="p">(</span><span class="nx">us</span><span class="p">,</span> <span class="nx">us</span><span class="p">.</span><span class="nx">objects</span><span class="p">.</span><span class="nx">states</span><span class="p">).</span><span class="nx">features</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">enter</span><span class="p">()</span>
      <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">"path"</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"d"</span><span class="p">,</span> <span class="nx">path</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"fill"</span><span class="p">,</span> <span class="s2">"LightGray"</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"stroke"</span><span class="p">,</span> <span class="s2">"White"</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">"mouseover"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
          <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">style</span><span class="p">(</span><span class="s2">"fill"</span><span class="p">,</span> <span class="s2">"CornflowerBlue"</span><span class="p">);</span>
          <span class="p">})</span>                  
      <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">"mouseout"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
           <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">style</span><span class="p">(</span><span class="s2">"fill"</span><span class="p">,</span> <span class="s2">"LightGray"</span><span class="p">);</span>
          <span class="p">});</span>
<span class="p">});</span>
<span class="p">})();</span></code></pre></figure>

<div class="divider"></div>

<div class="divider"></div>

<p>A basemap is set at this point, lets go ahead and place the bar objects based on the geo-location or Lat/Long values that we pass along as a javascript variable “sampleData”.</p>

<div id="unitedstates">
<script type="text/javascript">
(function() {

var projection = d3.geo.albersUsa()
    .scale(1000)
    .translate([800/2, 500/2]);


var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("#unitedstates").append("svg")
    .attr("width", 750)
    .attr("height", 500);

d3.json("airport/us.json", function(error, us) {
  if (error) return console.error(error);
  console.log(us);

  svg.selectAll("path")
     .data(topojson.feature(us, us.objects.states).features)
      .enter()
      .append("path")
      .attr("d", path)
      .attr("fill", "LightGray")
      .attr("stroke", "White");



var  sampleData = [ {"name": "San Francisco", "coordinates": [-122.417,37.783], "barheight": 100},
            {"name": "Indiana", "coordinates": [-86.682,39.52], "barheight": 50},
            {"name": "NewYork", "coordinates": [-73.778,40.63], "barheight": 80}              
            ];

  bars = svg.selectAll("g")
    .data(sampleData)
    .enter()
    .append("g")
    .attr("transform", function(d) {return "translate(" + projection(d.coordinates) + ")";});
    
    bars.append("rect")
    .attr("transform", "rotate(180)")
    .attr('width', 10)
    .attr('height',  0)
    .style("fill", "CornflowerBlue")
    .attr('height',  function(d) {return d.barheight});

      bars.append("text")
      .style({
        'fill':'#050505',
        'font-family':'sans-serif',
        'font-size':'7px'
      })  
      .attr("dy", ".80em")
    .attr("text-anchor", "start") 
    .text(function(d) {return d.name});


  });


})();
</script>
</div>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">  <span class="kd">var</span>  <span class="nx">sampleData</span> <span class="o">=</span> <span class="p">[</span> <span class="p">{</span><span class="s2">"name"</span><span class="p">:</span> <span class="s2">"San Francisco"</span><span class="p">,</span> <span class="s2">"coordinates"</span><span class="p">:</span> <span class="p">[</span><span class="o">-</span><span class="mf">122.417</span><span class="p">,</span><span class="mf">37.783</span><span class="p">],</span> <span class="s2">"barheight"</span><span class="p">:</span> <span class="mi">100</span><span class="p">},{</span><span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Indiana"</span><span class="p">,</span> <span class="s2">"coordinates"</span><span class="p">:</span> <span class="p">[</span><span class="o">-</span><span class="mf">86.682</span><span class="p">,</span><span class="mf">39.52</span><span class="p">],</span> <span class="s2">"barheight"</span><span class="p">:</span> <span class="mi">50</span><span class="p">},</span> <span class="p">{</span><span class="s2">"name"</span><span class="p">:</span> <span class="s2">"NewYork"</span><span class="p">,</span> <span class="s2">"coordinates"</span><span class="p">:</span> <span class="p">[</span><span class="o">-</span><span class="mf">73.778</span><span class="p">,</span><span class="mf">40.63</span><span class="p">],</span> <span class="s2">"barheight"</span><span class="p">:</span> <span class="mi">80</span><span class="p">}];</span>

  <span class="nx">bars</span> <span class="o">=</span> <span class="nx">svg</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">"g"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">sampleData</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">enter</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">"g"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"transform"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="s2">"translate("</span> <span class="o">+</span> <span class="nx">projection</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">coordinates</span><span class="p">)</span> <span class="o">+</span> <span class="s2">")"</span><span class="p">;});</span>
    
  <span class="nx">bars</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">"rect"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"transform"</span><span class="p">,</span> <span class="s2">"rotate(180)"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'width'</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span>  <span class="mi">0</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">"fill"</span><span class="p">,</span> <span class="s2">"CornflowerBlue"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span>  <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">barheight</span><span class="p">});</span>

  <span class="nx">bars</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">"text"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">style</span><span class="p">({</span>
       <span class="s1">'fill'</span><span class="p">:</span><span class="s1">'#050505'</span><span class="p">,</span>
       <span class="s1">'font-family'</span><span class="p">:</span><span class="s1">'sans-serif'</span><span class="p">,</span>
       <span class="s1">'font-size'</span><span class="p">:</span><span class="s1">'7px'</span>
      <span class="p">})</span>  
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"dy"</span><span class="p">,</span> <span class="s2">".80em"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"text-anchor"</span><span class="p">,</span> <span class="s2">"start"</span><span class="p">)</span> 
    <span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="p">});</span>

      </code></pre></figure>

<div class="divider"></div>

<p>And to create the bar transition representing the magnitude of flights in each airport is done in the following way:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">bars</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">"rect"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"transform"</span><span class="p">,</span> <span class="s2">"rotate(180)"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'width'</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span>  <span class="mi">0</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">"fill"</span><span class="p">,</span> <span class="s2">"CornflowerBlue"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">return</span> <span class="nx">i</span> <span class="o">*</span> <span class="mi">20</span><span class="p">;</span>
      <span class="p">})</span>
      <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">15000</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span>  <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">barheight</span><span class="p">});</span>

        </code></pre></figure>

<div class="divider"></div>
<p>Once the bars and their magnitudes are passed to the “bars” svg variable, we are set to make the final transition of the bar into a rectangle that can hold text in it.</p>

<p>And I wont claim this as to be an ideal way to create a tooltip, infact this is not intented to be a tooltip but an overlay of line graphs similar to <a href="http://www.nytimes.com/interactive/2014/06/05/upshot/how-the-recession-reshaped-the-economy-in-255-charts.html">this @nytime_upshot</a> on mouseover event!</p>

<div id="trans">
<script type="text/javascript">
(function() {
var border=1;
var bordercolor='black';

var svg = d3.select("#trans").append("svg")
	.attr('border', border)
    .attr('width',740)
	.attr('height',300);

var borderPath = svg.append("rect")
       			.attr("x", 0)
       			.attr("y", 0)
       			.attr("height", 300)
       			.attr("width", 740)
       			.style("stroke", bordercolor)
       			.style("fill", "none")
       			.style("stroke-width", border);


	svg.append('rect').style('fill', '#005fcc')
	    .attr("y", 20)
		.attr("x", 20)
        .attr('width', 15)
        .attr('height', 100)
        .attr("transform", function(d) {
        	movinText = svg.append("text")
			      .attr("y", 300)
			      .attr("x", 800)
			      .style("fill", "LightGrey")
			      .style("font-size", "17px")
			      .style("font-weight", "bold")
			      .text("Denver International Airport").style('opacity', 0);
        })
        .on('mouseover',function(d) {
		    d3.select(this).transition()
		            .style('opacity', 1)
		            .style('fill', "000066")
		            .attr('width',  300)
		            .attr('height',  160)
		    movinText.style('opacity', 0.9)
                    .transition()
                    .attr("y", 100)
                    .attr("x", 60)
                    .duration(500)
        })
        .on('mouseout',function(d) {
		    d3.select(this).transition()
		            .style('opacity', 1)
		            .style('fill', "#005fcc")
		            .attr('width',  20)
		            .attr('height',  100)
		    movinText
                    .transition()
                    .attr("y", 300)
                    .attr("x", 800)
                    .style('opacity', 0)
                    .duration(500)
        })
        
        

})();
</script>
</div>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

<span class="kd">var</span> <span class="nx">svg</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">"#trans"</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s2">"svg"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'width'</span><span class="p">,</span><span class="mi">700</span><span class="p">)</span>
	<span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span><span class="mi">300</span><span class="p">);</span>

	<span class="nx">svg</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">'rect'</span><span class="p">).</span><span class="nx">style</span><span class="p">(</span><span class="s1">'fill'</span><span class="p">,</span> <span class="s1">'#005fcc'</span><span class="p">)</span>
	    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"y"</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>
		<span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"x"</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'width'</span><span class="p">,</span> <span class="mi">15</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"transform"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
        	<span class="nx">movinText</span> <span class="o">=</span> <span class="nx">svg</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">"text"</span><span class="p">)</span>
			      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"y"</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
			      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"x"</span><span class="p">,</span> <span class="mi">800</span><span class="p">)</span>
			      <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">"fill"</span><span class="p">,</span> <span class="s2">"LightGrey"</span><span class="p">)</span>
			      <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">"font-size"</span><span class="p">,</span> <span class="s2">"17px"</span><span class="p">)</span>
			      <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">"font-weight"</span><span class="p">,</span> <span class="s2">"bold"</span><span class="p">)</span>
			      <span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="s2">"Denver International Airport"</span><span class="p">).</span><span class="nx">style</span><span class="p">(</span><span class="s1">'opacity'</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="p">})</span>
        <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'mouseover'</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
		    <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">transition</span><span class="p">()</span>
		            <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s1">'opacity'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
		            <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s1">'fill'</span><span class="p">,</span> <span class="s2">"000066"</span><span class="p">)</span>
		            <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'width'</span><span class="p">,</span>  <span class="mi">300</span><span class="p">)</span>
		            <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span>  <span class="mi">160</span><span class="p">)</span>
		    <span class="nx">movinText</span><span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s1">'opacity'</span><span class="p">,</span> <span class="mf">0.9</span><span class="p">)</span>
                    <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
                    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"y"</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
                    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"x"</span><span class="p">,</span> <span class="mi">60</span><span class="p">)</span>
                    <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
        <span class="p">})</span>
        <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">'mouseout'</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
		    <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">transition</span><span class="p">()</span>
		            <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s1">'opacity'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
		            <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s1">'fill'</span><span class="p">,</span> <span class="s2">"#005fcc"</span><span class="p">)</span>
		            <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'width'</span><span class="p">,</span>  <span class="mi">20</span><span class="p">)</span>
		            <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'height'</span><span class="p">,</span>  <span class="mi">100</span><span class="p">)</span>
		    <span class="nx">movinText</span>
                    <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
                    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"y"</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
                    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"x"</span><span class="p">,</span> <span class="mi">800</span><span class="p">)</span>
                    <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s1">'opacity'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
        <span class="p">})</span>
        
        

<span class="p">})();</span></code></pre></figure>

<div class="divider"></div>

<p>Putting things together would result in the visualization shown <a href="http://www.santhoshfiddle.com/geoSample/index.html">here!</a></p>

<p>I hope this is helpfull in building an interactive map based visualization, I posted another blogpost on bubble plot on maps where the Year Clock is implemented.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">My Critique on Precinct-Level Choropleth Map</title>
  <link rel="alternate" type="text/html" href="http://santhosh114.github.io//post3.html" />
  <id>http://santhosh114.github.io//post3</id>
  <published>2015-10-05T00:00:00Z</published>
  <updated>2015-10-05T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p><img src="../static/img/blog/critique/main.png" alt="Test Image" style="width:704px;height:427px;" /></p>

<blockquote>
  <p>This is my critique on the article titled <a href="http://www.nytimes.com/interactive/2014/11/04/upshot/senate-maps.html?_r=0">“The Most Detailed Maps You’ll See From the Midterm Elections”</a>
 @nytimes/upshot</p>
</blockquote>

<div class="divider"></div>

<h3 id="infograph-overview"><a href="">Infograph Overview:</a></h3>

<p>This visualization is a precinct-level choropleth map of election results from the midterm elections. The objective of the visualization is to show a fine-grained analysis of how the Republicans and Democrats are spread along with the population density, measured by the graduated color scale.</p>

<p>A precinct is one of the part into which a town or city is divided in order to organize elections, as reported by the article- “there were more than 175,000 precincts in the United States in 2012, fifty times the number of counties”.</p>

<p>So this demonstrates the sheer efficacy of the precinct-level data and how effectively one can draw insights when the data is much finer. Now the county level analysis of polling results gives a clearer picture of how the data spread within the county. Hence, this visualization for me appears to have the potential to convey actionable insights.</p>

<div class="divider"></div>

<h3 id="visualization-technique"><a href="">Visualization Technique:</a></h3>

<p>This is a geo-location based map visualization technique called choropleth map and it uses a coloring scheme inside defined areas on a map in order to show value levels and indicate the average values of some property or quantity in those areas.</p>

<div class="divider"></div>

<h3 id="how-it-works"><a href="">How it works:</a></h3>

<p>The basic design is to represent Democratic in blue and Republican in red with various hue levels based on the population density within the precincts. Much needed zoom functionality is provided with dynamic county-level labeling in the first layer and precinct-level labeling in the further zoom levels.</p>

<ul>
  <li>Key insights described as a result of detected patterns at different areas/regions.</li>
  <li>Overall percentage split-up shown state wide per candidate.</li>
  <li>Compare and contrasts population based on its metadata like candidate origin, racial attributes etc.</li>
  <li>Population density as hue variation augmented with party specific colors.</li>
  <li>MouseOver shows the candidate information and total number of votes.</li>
  <li>Minimal design with the insights described in the form of plain text.</li>
  <li>Every visualization technique has it own pros and cons in terms of how well it depicts the data. This is an excellent example of geo-data-visualization with optimal usage of design, color and area breakdown. The following are the few points summarizing this.</li>
</ul>

<div class="divider"></div>

<h3 id="design-mileage"><a href="">Design Mileage:</a></h3>

<p>The precinct-level data clearly adds a lot of detail and outlines distinct clusters.
Helpful for finding intriguing relationships between two or more geographic location based on the nature of the population.
Give an idea of how each area compares with other in terms of number and spread of votes.</p>

<div class="divider"></div>

<h3 id="data-sources"><a href="">Data Sources:</a></h3>

<p>State wise polling data is sourced from the corresponding state’s Board of Elections, therefore the probe for data integrity will be simply out of question, at least from where I stand. 
Streets data by OpenStreetMap contributers.</p>

 ]]></content>
</entry>



</feed>
